{"version":3,"file":"index.esm.js","sources":["../../src/utils/helpers/index.ts"],"sourcesContent":["/**\r\n * 通用工具函数\r\n * 提供常用的辅助函数\r\n */\r\n\r\n/**\r\n * 判断对象是否为空\r\n * @param obj - 要检查的对象\r\n * @returns 如果对象为空返回true，否则返回false\r\n */\r\nexport const isEmpty = (obj: Record<string, any>): boolean => \r\n  Object.keys(obj).length === 0 && obj.constructor === Object;\r\n\r\n/**\r\n * 设置cookie\r\n * @param name - cookie名称\r\n * @param value - cookie值\r\n * @param days - 过期天数，默认7天\r\n * @param path - cookie路径，默认'/'\r\n */\r\nexport const setCookie = (name: string, value: string, days: number = 7, path: string = '/'): void => {\r\n  const expires = new Date(Date.now() + days * 864e5).toUTCString();\r\n  document.cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=${path}`;\r\n};\r\n\r\n/**\r\n * 获取cookie值\r\n * @param name - cookie名称\r\n * @returns cookie值，如果不存在则返回空字符串\r\n */\r\nexport const getCookie = (name: string): string =>\r\n  document.cookie.split('; ').reduce((r, v) => {\r\n    const parts = v.split('=');\r\n    return parts[0] === name ? decodeURIComponent(parts[1]) : r;\r\n  }, '');\r\n\r\n/**\r\n * 删除cookie\r\n * @param name - cookie名称\r\n * @param path - cookie路径\r\n */\r\nexport const deleteCookie = (name: string, path: string = '/'): void => {\r\n  setCookie(name, '', -1, path);\r\n};\r\n\r\n/**\r\n * 获取所有cookie作为对象\r\n * @returns 包含所有cookie的对象\r\n */\r\nexport const getCookieObj = (): Record<string, string> => {\r\n  const cookieArr = document.cookie.split('; ').map(item => item.split('='));\r\n  const obj: Record<string, string> = {};\r\n  for (const [prop, value] of cookieArr) obj[prop] = value;\r\n  return obj;\r\n};\r\n\r\n/**\r\n * 将字符串分割成指定大小的块\r\n * @param str - 要分割的字符串\r\n * @param size - 每个块的大小\r\n * @returns 分割后的字符串数组\r\n */\r\nexport const chunkString = (str: string, size: number): string[] => {\r\n  const numChunks = Math.ceil(str.length / size);\r\n  const chunks = new Array(numChunks);\r\n\r\n  for (let i = 0, o = 0; i < numChunks; i += 1, o += size) {\r\n    chunks[i] = str.substr(o, size);\r\n  }\r\n\r\n  return chunks;\r\n};\r\n\r\n/**\r\n * 节流函数\r\n * 限制函数在一定时间内只能执行一次\r\n * @param callee - 要节流的函数\r\n * @param timeout - 节流时间间隔（毫秒）\r\n * @returns 节流后的函数\r\n */\r\nexport const throttle = <T extends (...args: any[]) => any>(callee: T, timeout: number): ((...args: Parameters<T>) => void) => {\r\n  let timer: number | null = null;\r\n  \r\n  return function perform(...args: Parameters<T>): void {\r\n    if (timer) return;\r\n    \r\n    timer = window.setTimeout(() => {\r\n      callee(...args);\r\n      timer = null;\r\n    }, timeout);\r\n  };\r\n};\r\n\r\n/**\r\n * 防抖函数\r\n * 延迟函数执行，如果在延迟时间内再次调用则重新计时\r\n * @param callee - 要防抖的函数\r\n * @param timeout - 防抖时间间隔（毫秒）\r\n * @returns 防抖后的函数\r\n */\r\nexport const debounce = <T extends (...args: any[]) => any>(callee: T, timeout: number): ((...args: Parameters<T>) => void) => {\r\n  let timer: number | null = null;\r\n  \r\n  return function perform(...args: Parameters<T>): void {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    \r\n    timer = window.setTimeout(() => {\r\n      callee(...args);\r\n      timer = null;\r\n    }, timeout);\r\n  };\r\n};\r\n\r\n/**\r\n * 截断数字到指定小数位\r\n * @param amount - 要截断的数字\r\n * @param digit - 小数位数，默认为2\r\n * @returns 截断后的数字\r\n */\r\nexport const truncateToDecimals = (amount: number, digit: number = 2): number => {\r\n  const re = new RegExp(`(\\\\d+\\\\.\\\\d{${digit}})(\\\\d)`);\r\n  const m = amount.toString().match(re);\r\n  return m ? parseFloat(m[1]) : amount;\r\n};\r\n\r\n/**\r\n * 格式化金额显示\r\n * @param amount - 金额数值\r\n * @param options - 格式化选项\r\n * @returns 格式化后的金额字符串\r\n */\r\nexport const formatAmount = (\r\n  amount: number,\r\n  options: {\r\n    locale?: string;\r\n    currency?: string;\r\n    minimumFractionDigits?: number;\r\n    maximumFractionDigits?: number;\r\n  } = {}\r\n): string => {\r\n  const {\r\n    locale = 'en-US',\r\n    currency = 'USD',\r\n    minimumFractionDigits = 2,\r\n    maximumFractionDigits = 2\r\n  } = options;\r\n  \r\n  return new Intl.NumberFormat(locale, {\r\n    style: 'currency',\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  }).format(amount);\r\n}; "],"names":["isEmpty","obj","Object","keys","length","constructor","setCookie","name","value","days","path","expires","Date","now","toUTCString","document","cookie","concat","encodeURIComponent","getCookie","split","reduce","r","v","parts","decodeURIComponent","deleteCookie","getCookieObj","cookieArr_1","map","item","_i","_a","prop","chunkString","str","size","numChunks","Math","ceil","chunks","Array","i","o","substr","throttle","callee","timeout","timer","args","arguments","window","setTimeout","apply","debounce","clearTimeout","truncateToDecimals","amount","digit","re","RegExp","m","toString","match","parseFloat","formatAmount","options","locale","_b","currency","_c","minimumFractionDigits","_d","maximumFractionDigits","Intl","NumberFormat","style","format"],"mappings":"AAUO,IAAMA,EAAU,SAACC,GACtB,OAA4B,IAA5BC,OAAOC,KAAKF,GAAKG,QAAgBH,EAAII,cAAgBH,MAArD,EASWI,EAAY,SAACC,EAAcC,EAAeC,EAAkBC,QAAlB,IAAAD,IAAAA,EAAgB,QAAE,IAAAC,IAAAA,EAAkB,KACzF,IAAMC,EAAU,IAAIC,KAAKA,KAAKC,MAAe,MAAPJ,GAAcK,cACpDC,SAASC,OAAS,GAAAC,OAAGV,EAAQ,KAAAU,OAAAC,mBAAmBV,GAAmB,cAAAS,OAAAN,EAAiB,WAAAM,OAAAP,EACtF,EAOaS,EAAY,SAACZ,GACxB,OAAAQ,SAASC,OAAOI,MAAM,MAAMC,OAAO,SAACC,EAAGC,GACrC,IAAMC,EAAQD,EAAEH,MAAM,KACtB,OAAOI,EAAM,KAAOjB,EAAOkB,mBAAmBD,EAAM,IAAMF,CAC3D,EAAE,GAHH,EAUWI,EAAe,SAACnB,EAAcG,QAAA,IAAAA,IAAAA,EAAkB,KAC3DJ,EAAUC,EAAM,IAAK,EAAGG,EAC1B,EAMaiB,EAAe,WAG1B,IAFA,IACM1B,EAA8B,CAAA,MACR2B,EAFVb,SAASC,OAAOI,MAAM,MAAMS,IAAI,SAAAC,GAAQ,OAAAA,EAAKV,MAAM,IAAI,GAE7CW,EAAAH,EAAAxB,OAAA2B,IAAS,CAA1B,IAAAC,OAACC,EAAID,EAAA,GAAExB,EAAKwB,EAAA,GAAgB/B,EAAIgC,GAAQzB,CAAM,CACzD,OAAOP,CACT,EAQaiC,EAAc,SAACC,EAAaC,GAIvC,IAHA,IAAMC,EAAYC,KAAKC,KAAKJ,EAAI/B,OAASgC,GACnCI,EAAS,IAAIC,MAAMJ,GAEhBK,EAAI,EAAGC,EAAI,EAAGD,EAAIL,EAAWK,GAAK,EAAGC,GAAKP,EACjDI,EAAOE,GAAKP,EAAIS,OAAOD,EAAGP,GAG5B,OAAOI,CACT,EASaK,EAAW,SAAoCC,EAAWC,GACrE,IAAIC,EAAuB,KAE3B,OAAO,eAAiB,IAAsBC,EAAA,GAAAlB,EAAA,EAAtBA,EAAsBmB,UAAA9C,OAAtB2B,IAAAkB,EAAsBlB,GAAAmB,UAAAnB,GACxCiB,IAEJA,EAAQG,OAAOC,WAAW,WACxBN,EAAMO,WAAA,EAAIJ,GACVD,EAAQ,IACT,EAAED,GACL,CACF,EASaO,EAAW,SAAoCR,EAAWC,GACrE,IAAIC,EAAuB,KAE3B,OAAO,eAAiB,IAAsBC,EAAA,GAAAlB,EAAA,EAAtBA,EAAsBmB,UAAA9C,OAAtB2B,IAAAkB,EAAsBlB,GAAAmB,UAAAnB,GACxCiB,GACFO,aAAaP,GAGfA,EAAQG,OAAOC,WAAW,WACxBN,EAAMO,WAAA,EAAIJ,GACVD,EAAQ,IACT,EAAED,EACL,CACF,EAQaS,EAAqB,SAACC,EAAgBC,QAAA,IAAAA,IAAAA,EAAiB,GAClE,IAAMC,EAAK,IAAIC,OAAO,eAAe3C,OAAAyC,EAAc,YAC7CG,EAAIJ,EAAOK,WAAWC,MAAMJ,GAClC,OAAOE,EAAIG,WAAWH,EAAE,IAAMJ,CAChC,EAQaQ,EAAe,SAC1BR,EACAS,QAAA,IAAAA,IAAAA,EAKM,CAAA,GAGJ,IAAAlC,EAIEkC,EAJcC,OAAhBA,OAAS,IAAAnC,EAAA,QAAOA,EAChBoC,EAGEF,EAAOG,SAHTA,aAAW,MAAKD,EAChBE,EAEEJ,EAFuBK,sBAAzBA,OAAqB,IAAAD,EAAG,EAACA,EACzBE,EACEN,wBADFO,OAAwB,IAAAD,EAAA,IAG1B,OAAO,IAAIE,KAAKC,aAAaR,EAAQ,CACnCS,MAAO,WACPP,SAAQA,EACRE,sBAAqBA,EACrBE,sBAAqBA,IACpBI,OAAOpB,EACZ"}